!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
APIENTRY	SOIL.c	27;"	d	file:
CASE	stb_image_aug.c	2114;"	d	file:
CASE	stb_image_aug.c	2127;"	d	file:
CASE	stb_image_aug.c	2130;"	d	file:
CASE	stb_image_aug.c	2143;"	d	file:
CASE	stb_image_aug.c	489;"	d	file:
CASE	stb_image_aug.c	507;"	d	file:
COMBO	stb_image_aug.c	488;"	d	file:
DDPF_ALPHAPIXELS	image_DXT.h	102;"	d
DDPF_ALPHAPIXELS	stbi_DDS_aug_c.h	53;"	d
DDPF_FOURCC	image_DXT.h	103;"	d
DDPF_FOURCC	stbi_DDS_aug_c.h	54;"	d
DDPF_RGB	image_DXT.h	104;"	d
DDPF_RGB	stbi_DDS_aug_c.h	55;"	d
DDSCAPS2_CUBEMAP	image_DXT.h	114;"	d
DDSCAPS2_CUBEMAP	stbi_DDS_aug_c.h	65;"	d
DDSCAPS2_CUBEMAP_NEGATIVEX	image_DXT.h	116;"	d
DDSCAPS2_CUBEMAP_NEGATIVEX	stbi_DDS_aug_c.h	67;"	d
DDSCAPS2_CUBEMAP_NEGATIVEY	image_DXT.h	118;"	d
DDSCAPS2_CUBEMAP_NEGATIVEY	stbi_DDS_aug_c.h	69;"	d
DDSCAPS2_CUBEMAP_NEGATIVEZ	image_DXT.h	120;"	d
DDSCAPS2_CUBEMAP_NEGATIVEZ	stbi_DDS_aug_c.h	71;"	d
DDSCAPS2_CUBEMAP_POSITIVEX	image_DXT.h	115;"	d
DDSCAPS2_CUBEMAP_POSITIVEX	stbi_DDS_aug_c.h	66;"	d
DDSCAPS2_CUBEMAP_POSITIVEY	image_DXT.h	117;"	d
DDSCAPS2_CUBEMAP_POSITIVEY	stbi_DDS_aug_c.h	68;"	d
DDSCAPS2_CUBEMAP_POSITIVEZ	image_DXT.h	119;"	d
DDSCAPS2_CUBEMAP_POSITIVEZ	stbi_DDS_aug_c.h	70;"	d
DDSCAPS2_VOLUME	image_DXT.h	121;"	d
DDSCAPS2_VOLUME	stbi_DDS_aug_c.h	72;"	d
DDSCAPS_COMPLEX	image_DXT.h	108;"	d
DDSCAPS_COMPLEX	stbi_DDS_aug_c.h	59;"	d
DDSCAPS_MIPMAP	image_DXT.h	110;"	d
DDSCAPS_MIPMAP	stbi_DDS_aug_c.h	61;"	d
DDSCAPS_TEXTURE	image_DXT.h	109;"	d
DDSCAPS_TEXTURE	stbi_DDS_aug_c.h	60;"	d
DDSD_CAPS	image_DXT.h	92;"	d
DDSD_CAPS	stbi_DDS_aug_c.h	43;"	d
DDSD_DEPTH	image_DXT.h	99;"	d
DDSD_DEPTH	stbi_DDS_aug_c.h	50;"	d
DDSD_HEIGHT	image_DXT.h	93;"	d
DDSD_HEIGHT	stbi_DDS_aug_c.h	44;"	d
DDSD_LINEARSIZE	image_DXT.h	98;"	d
DDSD_LINEARSIZE	stbi_DDS_aug_c.h	49;"	d
DDSD_MIPMAPCOUNT	image_DXT.h	97;"	d
DDSD_MIPMAPCOUNT	stbi_DDS_aug_c.h	48;"	d
DDSD_PITCH	image_DXT.h	95;"	d
DDSD_PITCH	stbi_DDS_aug_c.h	46;"	d
DDSD_PIXELFORMAT	image_DXT.h	96;"	d
DDSD_PIXELFORMAT	stbi_DDS_aug_c.h	47;"	d
DDSD_WIDTH	image_DXT.h	94;"	d
DDSD_WIDTH	stbi_DDS_aug_c.h	45;"	d
DDS_header	image_DXT.h	/^DDS_header ;$/;"	t	typeref:struct:__anon13
DDS_header	stbi_DDS_aug_c.h	/^} DDS_header ;$/;"	t	typeref:struct:__anon21
DNL	stb_image_aug.c	1259;"	d	file:
EOI	stb_image_aug.c	1261;"	d	file:
FAST_BITS	stb_image_aug.c	587;"	d	file:
F_avg	stb_image_aug.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon12	file:
F_avg_first	stb_image_aug.c	/^   F_avg_first, F_paeth_first,$/;"	e	enum:__anon12	file:
F_none	stb_image_aug.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon12	file:
F_paeth	stb_image_aug.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon12	file:
F_paeth_first	stb_image_aug.c	/^   F_avg_first, F_paeth_first,$/;"	e	enum:__anon12	file:
F_sub	stb_image_aug.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon12	file:
F_up	stb_image_aug.c	/^   F_none=0, F_sub=1, F_up=2, F_avg=3, F_paeth=4,$/;"	e	enum:__anon12	file:
HDR_BUFLEN	stb_image_aug.c	3265;"	d	file:
HEADER_IMAGE_DXT	image_DXT.h	11;"	d
HEADER_IMAGE_HELPER	image_helper.h	10;"	d
HEADER_SIMPLE_OPENGL_IMAGE_LIBRARY	SOIL.h	41;"	d
HEADER_STB_IMAGE_AUGMENTED	stb_image_aug.h	67;"	d
HEADER_STB_IMAGE_DDS_AUGMENTATION	stbi_DDS_aug.h	6;"	d
IDCT_1D	stb_image_aug.c	836;"	d	file:
LSE_master_colors_max_min	image_DXT.c	/^void LSE_master_colors_max_min($/;"	f
MARKER_none	stb_image_aug.c	987;"	d	file:
MAX_LOADERS	stb_image_aug.c	147;"	d	file:
PNG_TYPE	stb_image_aug.c	2031;"	d	file:
P_SOIL_GLCOMPRESSEDTEXIMAGE2DPROC	SOIL.c	/^typedef void (APIENTRY * P_SOIL_GLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid * data);$/;"	t	file:
RESTART	stb_image_aug.c	1004;"	d	file:
RGBE_to_RGBdivA	image_helper.c	/^RGBE_to_RGBdivA$/;"	f
RGBE_to_RGBdivA2	image_helper.c	/^RGBE_to_RGBdivA2$/;"	f
SCAN_header	stb_image_aug.c	/^   SCAN_header,$/;"	e	enum:__anon2	file:
SCAN_load	stb_image_aug.c	/^   SCAN_load=0,$/;"	e	enum:__anon2	file:
SCAN_type	stb_image_aug.c	/^   SCAN_type,$/;"	e	enum:__anon2	file:
SOF	stb_image_aug.c	1262;"	d	file:
SOI	stb_image_aug.c	1260;"	d	file:
SOIL_CAPABILITY_NONE	SOIL.c	/^	SOIL_CAPABILITY_NONE = 0,$/;"	e	enum:__anon1	file:
SOIL_CAPABILITY_PRESENT	SOIL.c	/^	SOIL_CAPABILITY_PRESENT = 1$/;"	e	enum:__anon1	file:
SOIL_CAPABILITY_UNKNOWN	SOIL.c	/^	SOIL_CAPABILITY_UNKNOWN = -1,$/;"	e	enum:__anon1	file:
SOIL_CHECK_FOR_GL_ERRORS	SOIL.c	16;"	d	file:
SOIL_CLAMP_TO_EDGE	SOIL.c	53;"	d	file:
SOIL_CREATE_NEW_ID	SOIL.h	/^	SOIL_CREATE_NEW_ID = 0$/;"	e	enum:__anon17
SOIL_DDS_CUBEMAP_FACE_ORDER	SOIL.h	128;"	d
SOIL_FLAG_COMPRESS_TO_DXT	SOIL.h	/^	SOIL_FLAG_COMPRESS_TO_DXT = 32,$/;"	e	enum:__anon18
SOIL_FLAG_CoCg_Y	SOIL.h	/^	SOIL_FLAG_CoCg_Y = 256,$/;"	e	enum:__anon18
SOIL_FLAG_DDS_LOAD_DIRECT	SOIL.h	/^	SOIL_FLAG_DDS_LOAD_DIRECT = 64,$/;"	e	enum:__anon18
SOIL_FLAG_INVERT_Y	SOIL.h	/^	SOIL_FLAG_INVERT_Y = 16,$/;"	e	enum:__anon18
SOIL_FLAG_MIPMAPS	SOIL.h	/^	SOIL_FLAG_MIPMAPS = 2,$/;"	e	enum:__anon18
SOIL_FLAG_MULTIPLY_ALPHA	SOIL.h	/^	SOIL_FLAG_MULTIPLY_ALPHA = 8,$/;"	e	enum:__anon18
SOIL_FLAG_NTSC_SAFE_RGB	SOIL.h	/^	SOIL_FLAG_NTSC_SAFE_RGB = 128,$/;"	e	enum:__anon18
SOIL_FLAG_POWER_OF_TWO	SOIL.h	/^	SOIL_FLAG_POWER_OF_TWO = 1,$/;"	e	enum:__anon18
SOIL_FLAG_TEXTURE_RECTANGLE	SOIL.h	/^	SOIL_FLAG_TEXTURE_RECTANGLE = 512$/;"	e	enum:__anon18
SOIL_FLAG_TEXTURE_REPEATS	SOIL.h	/^	SOIL_FLAG_TEXTURE_REPEATS = 4,$/;"	e	enum:__anon18
SOIL_HDR_RGBE	SOIL.h	/^	SOIL_HDR_RGBE = 0,$/;"	e	enum:__anon20
SOIL_HDR_RGBdivA	SOIL.h	/^	SOIL_HDR_RGBdivA = 1,$/;"	e	enum:__anon20
SOIL_HDR_RGBdivA2	SOIL.h	/^	SOIL_HDR_RGBdivA2 = 2$/;"	e	enum:__anon20
SOIL_LOAD_AUTO	SOIL.h	/^	SOIL_LOAD_AUTO = 0,$/;"	e	enum:__anon16
SOIL_LOAD_L	SOIL.h	/^	SOIL_LOAD_L = 1,$/;"	e	enum:__anon16
SOIL_LOAD_LA	SOIL.h	/^	SOIL_LOAD_LA = 2,$/;"	e	enum:__anon16
SOIL_LOAD_RGB	SOIL.h	/^	SOIL_LOAD_RGB = 3,$/;"	e	enum:__anon16
SOIL_LOAD_RGBA	SOIL.h	/^	SOIL_LOAD_RGBA = 4$/;"	e	enum:__anon16
SOIL_MAX_CUBE_MAP_TEXTURE_SIZE	SOIL.c	65;"	d	file:
SOIL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	SOIL.c	73;"	d	file:
SOIL_NORMAL_MAP	SOIL.c	54;"	d	file:
SOIL_PROXY_TEXTURE_CUBE_MAP	SOIL.c	64;"	d	file:
SOIL_REFLECTION_MAP	SOIL.c	55;"	d	file:
SOIL_RGBA_S3TC_DXT1	SOIL.c	78;"	d	file:
SOIL_RGBA_S3TC_DXT3	SOIL.c	79;"	d	file:
SOIL_RGBA_S3TC_DXT5	SOIL.c	80;"	d	file:
SOIL_RGB_S3TC_DXT1	SOIL.c	77;"	d	file:
SOIL_SAVE_TYPE_BMP	SOIL.h	/^	SOIL_SAVE_TYPE_BMP = 1,$/;"	e	enum:__anon19
SOIL_SAVE_TYPE_DDS	SOIL.h	/^	SOIL_SAVE_TYPE_DDS = 2$/;"	e	enum:__anon19
SOIL_SAVE_TYPE_TGA	SOIL.h	/^	SOIL_SAVE_TYPE_TGA = 0,$/;"	e	enum:__anon19
SOIL_TEXTURE_BINDING_CUBE_MAP	SOIL.c	57;"	d	file:
SOIL_TEXTURE_CUBE_MAP	SOIL.c	56;"	d	file:
SOIL_TEXTURE_CUBE_MAP_NEGATIVE_X	SOIL.c	59;"	d	file:
SOIL_TEXTURE_CUBE_MAP_NEGATIVE_Y	SOIL.c	61;"	d	file:
SOIL_TEXTURE_CUBE_MAP_NEGATIVE_Z	SOIL.c	63;"	d	file:
SOIL_TEXTURE_CUBE_MAP_POSITIVE_X	SOIL.c	58;"	d	file:
SOIL_TEXTURE_CUBE_MAP_POSITIVE_Y	SOIL.c	60;"	d	file:
SOIL_TEXTURE_CUBE_MAP_POSITIVE_Z	SOIL.c	62;"	d	file:
SOIL_TEXTURE_RECTANGLE_ARB	SOIL.c	72;"	d	file:
SOIL_TEXTURE_WRAP_R	SOIL.c	52;"	d	file:
SOIL_create_OGL_single_cubemap	SOIL.c	/^	SOIL_create_OGL_single_cubemap$/;"	f
SOIL_create_OGL_texture	SOIL.c	/^	SOIL_create_OGL_texture$/;"	f
SOIL_direct_load_DDS	SOIL.c	/^unsigned int SOIL_direct_load_DDS($/;"	f
SOIL_direct_load_DDS_from_memory	SOIL.c	/^unsigned int SOIL_direct_load_DDS_from_memory($/;"	f
SOIL_free_image_data	SOIL.c	/^	SOIL_free_image_data$/;"	f
SOIL_internal_create_OGL_texture	SOIL.c	/^	SOIL_internal_create_OGL_texture$/;"	f
SOIL_last_result	SOIL.c	/^	SOIL_last_result$/;"	f
SOIL_load_OGL_HDR_texture	SOIL.c	/^	SOIL_load_OGL_HDR_texture$/;"	f
SOIL_load_OGL_cubemap	SOIL.c	/^	SOIL_load_OGL_cubemap$/;"	f
SOIL_load_OGL_cubemap_from_memory	SOIL.c	/^	SOIL_load_OGL_cubemap_from_memory$/;"	f
SOIL_load_OGL_single_cubemap	SOIL.c	/^	SOIL_load_OGL_single_cubemap$/;"	f
SOIL_load_OGL_single_cubemap_from_memory	SOIL.c	/^	SOIL_load_OGL_single_cubemap_from_memory$/;"	f
SOIL_load_OGL_texture	SOIL.c	/^	SOIL_load_OGL_texture$/;"	f
SOIL_load_OGL_texture_from_memory	SOIL.c	/^	SOIL_load_OGL_texture_from_memory$/;"	f
SOIL_load_image	SOIL.c	/^	SOIL_load_image$/;"	f
SOIL_load_image_from_memory	SOIL.c	/^	SOIL_load_image_from_memory$/;"	f
SOIL_save_image	SOIL.c	/^	SOIL_save_image$/;"	f
SOIL_save_screenshot	SOIL.c	/^	SOIL_save_screenshot$/;"	f
SOS	stb_image_aug.c	1263;"	d	file:
STBI_FAILURE_USERMSG	stb_image_aug.c	110;"	d	file:
STBI_NO_WRITE	stb_image_aug.c	102;"	d	file:
STBI_VERSION	stb_image_aug.h	161;"	d
STBI_default	stb_image_aug.h	/^   STBI_default = 0, \/\/ only used for req_comp$/;"	e	enum:__anon24
STBI_grey	stb_image_aug.h	/^   STBI_grey       = 1,$/;"	e	enum:__anon24
STBI_grey_alpha	stb_image_aug.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon24
STBI_rgb	stb_image_aug.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anon24
STBI_rgb_alpha	stb_image_aug.h	/^   STBI_rgb_alpha  = 4,$/;"	e	enum:__anon24
USE_COV_MAT	image_DXT.c	20;"	d	file:
WIN32_LEAN_AND_MEAN	SOIL.c	19;"	d	file:
YCbCr_to_RGB_row	stb_image_aug.c	/^static void YCbCr_to_RGB_row(uint8 *out, uint8 *y, uint8 *pcb, uint8 *pcr, int count, int step)$/;"	f	file:
ZFAST_BITS	stb_image_aug.c	1607;"	d	file:
ZFAST_MASK	stb_image_aug.c	1608;"	d	file:
__forceinline	stb_image_aug.c	83;"	d	file:
__forceinline	stb_image_aug.c	85;"	d	file:
at_eof	stb_image_aug.c	/^__forceinline static int at_eof(stbi *s)$/;"	f	file:
bit_reverse	stb_image_aug.c	/^__forceinline static int bit_reverse(int v, int bits)$/;"	f	file:
bitcount	stb_image_aug.c	/^static int bitcount(unsigned int a)$/;"	f	file:
bitreverse16	stb_image_aug.c	/^__forceinline static int bitreverse16(int n)$/;"	f	file:
bmask	stb_image_aug.c	/^static uint32 bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};$/;"	v	file:
bmp_load	stb_image_aug.c	/^static stbi_uc *bmp_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	file:
bmp_test	stb_image_aug.c	/^static int bmp_test(stbi *s)$/;"	f	file:
build_huffman	stb_image_aug.c	/^static int build_huffman(huffman *h, int *count)$/;"	f	file:
check_for_GL_errors	SOIL.c	/^void check_for_GL_errors( const char *calling_location )$/;"	f
check_png_header	stb_image_aug.c	/^static int check_png_header(stbi *s)$/;"	f	file:
chunk	stb_image_aug.c	/^} chunk;$/;"	t	typeref:struct:__anon10	file:
clamp	stb_image_aug.c	/^__forceinline static uint8 clamp(int x)$/;"	f	file:
clamp_byte	image_helper.c	/^unsigned char clamp_byte( int x ) { return ( (x) < 0 ? (0) : ( (x) > 255 ? 255 : (x) ) ); }$/;"	f
cleanup_jpeg	stb_image_aug.c	/^static void cleanup_jpeg(jpeg *j)$/;"	f	file:
code	stb_image_aug.c	/^   uint16 code[256];$/;"	m	struct:__anon4	file:
code_bits	stb_image_aug.c	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon5	file:
code_buffer	stb_image_aug.c	/^   uint32         code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon5	file:
code_buffer	stb_image_aug.c	/^   uint32 code_buffer;$/;"	m	struct:__anon9	file:
compress_DDS_alpha_block	image_DXT.c	/^	compress_DDS_alpha_block$/;"	f
compress_DDS_color_block	image_DXT.c	/^	compress_DDS_color_block$/;"	f
compute_color_line_STDEV	image_DXT.c	/^void compute_color_line_STDEV($/;"	f
compute_huffman_codes	stb_image_aug.c	/^static int compute_huffman_codes(zbuf *a)$/;"	f	file:
compute_transparency	stb_image_aug.c	/^static int compute_transparency(png *z, uint8 tc[3], int out_n)$/;"	f	file:
compute_y	stb_image_aug.c	/^static uint8 compute_y(int r, int g, int b)$/;"	f	file:
convert_RGB_to_YCoCg	image_helper.c	/^	convert_RGB_to_YCoCg$/;"	f
convert_YCoCg_to_RGB	image_helper.c	/^	convert_YCoCg_to_RGB$/;"	f
convert_bit_range	image_DXT.c	/^int convert_bit_range( int c, int from_bits, int to_bits )$/;"	f
convert_format	stb_image_aug.c	/^static unsigned char *convert_format(unsigned char *data, int img_n, int req_comp, uint x, uint y)$/;"	f	file:
convert_image_to_DXT1	image_DXT.c	/^unsigned char* convert_image_to_DXT1($/;"	f
convert_image_to_DXT5	image_DXT.c	/^unsigned char* convert_image_to_DXT5($/;"	f
create_png_image	stb_image_aug.c	/^static int create_png_image(png *a, uint8 *raw, uint32 raw_len, int out_n)$/;"	f	file:
data	stb_image_aug.c	/^      uint8 *data;$/;"	m	struct:__anon5::__anon6	file:
dc_pred	stb_image_aug.c	/^      int dc_pred;$/;"	m	struct:__anon5::__anon6	file:
dds_load	stbi_DDS_aug_c.h	/^static stbi_uc *dds_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f
dds_test	stbi_DDS_aug_c.h	/^static int dds_test(stbi *s)$/;"	f
decode	stb_image_aug.c	/^__forceinline static int decode(jpeg *j, huffman *h)$/;"	f	file:
decode_block	stb_image_aug.c	/^static int decode_block(jpeg *j, short data[64], huffman *hdc, huffman *hac, int b)$/;"	f	file:
decode_jpeg_header	stb_image_aug.c	/^static int decode_jpeg_header(jpeg *z, int scan)$/;"	f	file:
decode_jpeg_image	stb_image_aug.c	/^static int decode_jpeg_image(jpeg *j)$/;"	f	file:
default_distance	stb_image_aug.c	/^static uint8 default_length[288], default_distance[32];$/;"	v	file:
default_length	stb_image_aug.c	/^static uint8 default_length[288], default_distance[32];$/;"	v	file:
delta	stb_image_aug.c	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon4	file:
dequant	stb_image_aug.c	/^   uint8 dequant[4][64];$/;"	m	struct:__anon5	file:
dequant2	stb_image_aug.c	/^   unsigned short dequant2[4][64];$/;"	m	struct:__anon5	file:
dezigzag	stb_image_aug.c	/^static uint8 dezigzag[64+15] =$/;"	v	file:
dist_base	stb_image_aug.c	/^static int dist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v	file:
dist_extra	stb_image_aug.c	/^static int dist_extra[32] =$/;"	v	file:
div16	stb_image_aug.c	1348;"	d	file:
div4	stb_image_aug.c	1309;"	d	file:
do_png	stb_image_aug.c	/^static unsigned char *do_png(png *p, int *x, int *y, int *n, int req_comp)$/;"	f	file:
do_zlib	stb_image_aug.c	/^static int do_zlib(zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f	file:
dwAlphaBitMask	image_DXT.h	/^        unsigned int    dwAlphaBitMask;$/;"	m	struct:__anon13::__anon14
dwAlphaBitMask	stbi_DDS_aug_c.h	/^      unsigned int    dwAlphaBitMask;$/;"	m	struct:__anon21::__anon22
dwBBitMask	image_DXT.h	/^        unsigned int    dwBBitMask;$/;"	m	struct:__anon13::__anon14
dwBBitMask	stbi_DDS_aug_c.h	/^      unsigned int    dwBBitMask;$/;"	m	struct:__anon21::__anon22
dwCaps1	image_DXT.h	/^        unsigned int    dwCaps1;$/;"	m	struct:__anon13::__anon15
dwCaps1	stbi_DDS_aug_c.h	/^      unsigned int    dwCaps1;$/;"	m	struct:__anon21::__anon23
dwCaps2	image_DXT.h	/^        unsigned int    dwCaps2;$/;"	m	struct:__anon13::__anon15
dwCaps2	stbi_DDS_aug_c.h	/^      unsigned int    dwCaps2;$/;"	m	struct:__anon21::__anon23
dwDDSX	image_DXT.h	/^        unsigned int    dwDDSX;$/;"	m	struct:__anon13::__anon15
dwDDSX	stbi_DDS_aug_c.h	/^      unsigned int    dwDDSX;$/;"	m	struct:__anon21::__anon23
dwDepth	image_DXT.h	/^    unsigned int    dwDepth;$/;"	m	struct:__anon13
dwDepth	stbi_DDS_aug_c.h	/^    unsigned int    dwDepth;$/;"	m	struct:__anon21
dwFlags	image_DXT.h	/^        unsigned int    dwFlags;$/;"	m	struct:__anon13::__anon14
dwFlags	image_DXT.h	/^    unsigned int    dwFlags;$/;"	m	struct:__anon13
dwFlags	stbi_DDS_aug_c.h	/^      unsigned int    dwFlags;$/;"	m	struct:__anon21::__anon22
dwFlags	stbi_DDS_aug_c.h	/^    unsigned int    dwFlags;$/;"	m	struct:__anon21
dwFourCC	image_DXT.h	/^        unsigned int    dwFourCC;$/;"	m	struct:__anon13::__anon14
dwFourCC	stbi_DDS_aug_c.h	/^      unsigned int    dwFourCC;$/;"	m	struct:__anon21::__anon22
dwGBitMask	image_DXT.h	/^        unsigned int    dwGBitMask;$/;"	m	struct:__anon13::__anon14
dwGBitMask	stbi_DDS_aug_c.h	/^      unsigned int    dwGBitMask;$/;"	m	struct:__anon21::__anon22
dwHeight	image_DXT.h	/^    unsigned int    dwHeight;$/;"	m	struct:__anon13
dwHeight	stbi_DDS_aug_c.h	/^    unsigned int    dwHeight;$/;"	m	struct:__anon21
dwMagic	image_DXT.h	/^    unsigned int    dwMagic;$/;"	m	struct:__anon13
dwMagic	stbi_DDS_aug_c.h	/^    unsigned int    dwMagic;$/;"	m	struct:__anon21
dwMipMapCount	image_DXT.h	/^    unsigned int    dwMipMapCount;$/;"	m	struct:__anon13
dwMipMapCount	stbi_DDS_aug_c.h	/^    unsigned int    dwMipMapCount;$/;"	m	struct:__anon21
dwPitchOrLinearSize	image_DXT.h	/^    unsigned int    dwPitchOrLinearSize;$/;"	m	struct:__anon13
dwPitchOrLinearSize	stbi_DDS_aug_c.h	/^    unsigned int    dwPitchOrLinearSize;$/;"	m	struct:__anon21
dwRBitMask	image_DXT.h	/^        unsigned int    dwRBitMask;$/;"	m	struct:__anon13::__anon14
dwRBitMask	stbi_DDS_aug_c.h	/^      unsigned int    dwRBitMask;$/;"	m	struct:__anon21::__anon22
dwRGBBitCount	image_DXT.h	/^        unsigned int    dwRGBBitCount;$/;"	m	struct:__anon13::__anon14
dwRGBBitCount	stbi_DDS_aug_c.h	/^      unsigned int    dwRGBBitCount;$/;"	m	struct:__anon21::__anon22
dwReserved	image_DXT.h	/^        unsigned int    dwReserved;$/;"	m	struct:__anon13::__anon15
dwReserved	stbi_DDS_aug_c.h	/^      unsigned int    dwReserved;$/;"	m	struct:__anon21::__anon23
dwReserved1	image_DXT.h	/^    unsigned int    dwReserved1[ 11 ];$/;"	m	struct:__anon13
dwReserved1	stbi_DDS_aug_c.h	/^    unsigned int    dwReserved1[ 11 ];$/;"	m	struct:__anon21
dwReserved2	image_DXT.h	/^    unsigned int    dwReserved2;$/;"	m	struct:__anon13
dwReserved2	stbi_DDS_aug_c.h	/^    unsigned int    dwReserved2;$/;"	m	struct:__anon21
dwSize	image_DXT.h	/^        unsigned int    dwSize;$/;"	m	struct:__anon13::__anon14
dwSize	image_DXT.h	/^    unsigned int    dwSize;$/;"	m	struct:__anon13
dwSize	stbi_DDS_aug_c.h	/^      unsigned int    dwSize;$/;"	m	struct:__anon21::__anon22
dwSize	stbi_DDS_aug_c.h	/^    unsigned int    dwSize;$/;"	m	struct:__anon21
dwWidth	image_DXT.h	/^    unsigned int    dwWidth;$/;"	m	struct:__anon13
dwWidth	stbi_DDS_aug_c.h	/^    unsigned int    dwWidth;$/;"	m	struct:__anon21
e	stb_image_aug.c	/^static int e(char *str)$/;"	f	file:
e	stb_image_aug.c	132;"	d	file:
e	stb_image_aug.c	134;"	d	file:
e	stb_image_aug.c	136;"	d	file:
epf	stb_image_aug.c	139;"	d	file:
epuc	stb_image_aug.c	140;"	d	file:
expand	stb_image_aug.c	/^static int expand(zbuf *z, int n)  \/\/ need to make room for n bytes$/;"	f	file:
expand_palette	stb_image_aug.c	/^static int expand_palette(png *a, uint8 *palette, int len, int pal_img_n)$/;"	f	file:
expanded	stb_image_aug.c	/^   uint8 *idata, *expanded, *out;$/;"	m	struct:__anon11	file:
extend_receive	stb_image_aug.c	/^__forceinline static int extend_receive(jpeg *j, int n)$/;"	f	file:
f2f	stb_image_aug.c	832;"	d	file:
failure_reason	stb_image_aug.c	/^static char *failure_reason;$/;"	v	file:
fast	stb_image_aug.c	/^   uint16 fast[1 << ZFAST_BITS];$/;"	m	struct:__anon8	file:
fast	stb_image_aug.c	/^   uint8  fast[1 << FAST_BITS];$/;"	m	struct:__anon4	file:
fill_bits	stb_image_aug.c	/^static void fill_bits(zbuf *z)$/;"	f	file:
find_max_RGBE	image_helper.c	/^find_max_RGBE$/;"	f
first_row_filter	stb_image_aug.c	/^static uint8 first_row_filter[5] =$/;"	v	file:
firstcode	stb_image_aug.c	/^   uint16 firstcode[16];$/;"	m	struct:__anon8	file:
firstsymbol	stb_image_aug.c	/^   uint16 firstsymbol[16];$/;"	m	struct:__anon8	file:
float2fixed	stb_image_aug.c	1381;"	d	file:
float2int	stb_image_aug.c	532;"	d	file:
fsh	stb_image_aug.c	833;"	d	file:
get16	stb_image_aug.c	/^static int get16(stbi *s)$/;"	f	file:
get16le	stb_image_aug.c	/^static int get16le(stbi *s)$/;"	f	file:
get32	stb_image_aug.c	/^static uint32 get32(stbi *s)$/;"	f	file:
get32le	stb_image_aug.c	/^static uint32 get32le(stbi *s)$/;"	f	file:
get8	stb_image_aug.c	/^__forceinline static int get8(stbi *s)$/;"	f	file:
get8u	stb_image_aug.c	/^__forceinline static uint8 get8u(stbi *s)$/;"	f	file:
get_chunk_header	stb_image_aug.c	/^static chunk get_chunk_header(stbi *s)$/;"	f	file:
get_marker	stb_image_aug.c	/^static uint8 get_marker(jpeg *j)$/;"	f	file:
getn	stb_image_aug.c	/^static void getn(stbi *s, stbi_uc *buffer, int n)$/;"	f	file:
grow_buffer_unsafe	stb_image_aug.c	/^static void grow_buffer_unsafe(jpeg *j)$/;"	f	file:
h	stb_image_aug.c	/^      int h,v;$/;"	m	struct:__anon5::__anon6	file:
h2	stb_image_aug.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon5::__anon6	file:
h2l_gamma_i	stb_image_aug.c	/^static float h2l_gamma_i=1.0f\/2.2f, h2l_scale_i=1.0f;$/;"	v	file:
h2l_scale_i	stb_image_aug.c	/^static float h2l_gamma_i=1.0f\/2.2f, h2l_scale_i=1.0f;$/;"	v	file:
ha	stb_image_aug.c	/^      int hd,ha;$/;"	m	struct:__anon5::__anon6	file:
has_DXT_capability	SOIL.c	/^static int has_DXT_capability = SOIL_CAPABILITY_UNKNOWN;$/;"	v	file:
has_NPOT_capability	SOIL.c	/^static int has_NPOT_capability = SOIL_CAPABILITY_UNKNOWN;$/;"	v	file:
has_cubemap_capability	SOIL.c	/^static int has_cubemap_capability = SOIL_CAPABILITY_UNKNOWN;$/;"	v	file:
has_tex_rectangle_capability	SOIL.c	/^static int has_tex_rectangle_capability = SOIL_CAPABILITY_UNKNOWN;$/;"	v	file:
hd	stb_image_aug.c	/^      int hd,ha;$/;"	m	struct:__anon5::__anon6	file:
hdr_convert	stb_image_aug.c	/^static void hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f	file:
hdr_gettoken	stb_image_aug.c	/^static char *hdr_gettoken(stbi *z, char *buffer)$/;"	f	file:
hdr_load	stb_image_aug.c	/^static float *hdr_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	file:
hdr_load_rgbe	stb_image_aug.c	/^static stbi_uc *hdr_load_rgbe(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	file:
hdr_test	stb_image_aug.c	/^static int hdr_test(stbi *s)$/;"	f	file:
hdr_to_ldr	stb_image_aug.c	/^static stbi_uc *hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f	file:
high_bit	stb_image_aug.c	/^static int high_bit(unsigned int z)$/;"	f	file:
hs	stb_image_aug.c	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon7	file:
huff_ac	stb_image_aug.c	/^   huffman huff_ac[4];$/;"	m	struct:__anon5	file:
huff_dc	stb_image_aug.c	/^   huffman huff_dc[4];$/;"	m	struct:__anon5	file:
huffman	stb_image_aug.c	/^} huffman;$/;"	t	typeref:struct:__anon4	file:
id	stb_image_aug.c	/^      int id;$/;"	m	struct:__anon5::__anon6	file:
idata	stb_image_aug.c	/^   uint8 *idata, *expanded, *out;$/;"	m	struct:__anon11	file:
idct_block	stb_image_aug.c	/^static void idct_block(uint8 *out, int out_stride, short data[64], uint8 *dequantize)$/;"	f	file:
idct_block	stb_image_aug.c	/^static void idct_block(uint8 *out, int out_stride, short data[64], unsigned short *dequantize)$/;"	f	file:
img_buffer	stb_image_aug.c	/^   uint8 *img_buffer, *img_buffer_end;$/;"	m	struct:__anon3	file:
img_buffer_end	stb_image_aug.c	/^   uint8 *img_buffer, *img_buffer_end;$/;"	m	struct:__anon3	file:
img_comp	stb_image_aug.c	/^   } img_comp[4];$/;"	m	struct:__anon5	typeref:struct:__anon5::__anon6	file:
img_file	stb_image_aug.c	/^   FILE  *img_file;$/;"	m	struct:__anon3	file:
img_h_max	stb_image_aug.c	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon5	file:
img_mcu_h	stb_image_aug.c	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon5	file:
img_mcu_w	stb_image_aug.c	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon5	file:
img_mcu_x	stb_image_aug.c	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon5	file:
img_mcu_y	stb_image_aug.c	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon5	file:
img_n	stb_image_aug.c	/^   int img_n, img_out_n;$/;"	m	struct:__anon3	file:
img_out_n	stb_image_aug.c	/^   int img_n, img_out_n;$/;"	m	struct:__anon3	file:
img_v_max	stb_image_aug.c	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon5	file:
img_x	stb_image_aug.c	/^   uint32 img_x, img_y;$/;"	m	struct:__anon3	file:
img_y	stb_image_aug.c	/^   uint32 img_x, img_y;$/;"	m	struct:__anon3	file:
init_defaults	stb_image_aug.c	/^static void init_defaults(void)$/;"	f	file:
int16	stb_image_aug.c	/^typedef   signed short  int16;$/;"	t	file:
int32	stb_image_aug.c	/^typedef   signed int    int32;$/;"	t	file:
jpeg	stb_image_aug.c	/^} jpeg;$/;"	t	typeref:struct:__anon5	file:
l2h_gamma	stb_image_aug.c	/^static float l2h_gamma=2.2f, l2h_scale=1.0f;$/;"	v	file:
l2h_scale	stb_image_aug.c	/^static float l2h_gamma=2.2f, l2h_scale=1.0f;$/;"	v	file:
ldr_to_hdr	stb_image_aug.c	/^static float   *ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f	file:
length	stb_image_aug.c	/^   uint32 length;$/;"	m	struct:__anon10	file:
length_base	stb_image_aug.c	/^static int length_base[31] = {$/;"	v	file:
length_extra	stb_image_aug.c	/^static int length_extra[31]=$/;"	v	file:
line0	stb_image_aug.c	/^   uint8 *line0,*line1;$/;"	m	struct:__anon7	file:
line1	stb_image_aug.c	/^   uint8 *line0,*line1;$/;"	m	struct:__anon7	file:
linebuf	stb_image_aug.c	/^      uint8 *linebuf;$/;"	m	struct:__anon5::__anon6	file:
load_from_file	stb_image_aug.h	/^   stbi_uc * (*load_from_file)(FILE *f, int *x, int *y, int *comp, int req_comp);$/;"	m	struct:__anon25
load_from_memory	stb_image_aug.h	/^   stbi_uc * (*load_from_memory)(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp);$/;"	m	struct:__anon25
load_jpeg_image	stb_image_aug.c	/^static uint8 *load_jpeg_image(jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f	file:
loaders	stb_image_aug.c	/^stbi_loader *loaders[MAX_LOADERS];$/;"	v
marker	stb_image_aug.c	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon5	file:
max_loaders	stb_image_aug.c	/^static int max_loaders = 0;$/;"	v	file:
maxcode	stb_image_aug.c	/^   int maxcode[17];$/;"	m	struct:__anon8	file:
maxcode	stb_image_aug.c	/^   unsigned int maxcode[18];$/;"	m	struct:__anon4	file:
mipmap_image	image_helper.c	/^	mipmap_image$/;"	f
nomore	stb_image_aug.c	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon5	file:
num_bits	stb_image_aug.c	/^   int num_bits;$/;"	m	struct:__anon9	file:
order	stb_image_aug.c	/^   int scan_n, order[4];$/;"	m	struct:__anon5	file:
out	stb_image_aug.c	/^   uint8 *idata, *expanded, *out;$/;"	m	struct:__anon11	file:
outfile	stb_image_aug.c	/^static int outfile(char const *filename, int rgb_dir, int vdir, int x, int y, int comp, void *data, int alpha, int pad, char *fmt, ...)$/;"	f	file:
paeth	stb_image_aug.c	/^static int paeth(int a, int b, int c)$/;"	f	file:
parse_entropy_coded_data	stb_image_aug.c	/^static int parse_entropy_coded_data(jpeg *z)$/;"	f	file:
parse_huffman_block	stb_image_aug.c	/^static int parse_huffman_block(zbuf *a)$/;"	f	file:
parse_png_file	stb_image_aug.c	/^static int parse_png_file(png *z, int scan, int req_comp)$/;"	f	file:
parse_uncompressed_block	stb_image_aug.c	/^static int parse_uncompressed_block(zbuf *a)$/;"	f	file:
parse_zlib	stb_image_aug.c	/^static int parse_zlib(zbuf *a, int parse_header)$/;"	f	file:
parse_zlib_header	stb_image_aug.c	/^static int parse_zlib_header(zbuf *a)$/;"	f	file:
png	stb_image_aug.c	/^} png;$/;"	t	typeref:struct:__anon11	file:
process_frame_header	stb_image_aug.c	/^static int process_frame_header(jpeg *z, int scan)$/;"	f	file:
process_marker	stb_image_aug.c	/^static int process_marker(jpeg *z, int m)$/;"	f	file:
process_scan_header	stb_image_aug.c	/^static int process_scan_header(jpeg *z)$/;"	f	file:
psd_load	stb_image_aug.c	/^static stbi_uc *psd_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	file:
psd_test	stb_image_aug.c	/^static int psd_test(stbi *s)$/;"	f	file:
query_DXT_capability	SOIL.c	/^int query_DXT_capability( void )$/;"	f
query_NPOT_capability	SOIL.c	/^int query_NPOT_capability( void )$/;"	f
query_cubemap_capability	SOIL.c	/^int query_cubemap_capability( void )$/;"	f
query_tex_rectangle_capability	SOIL.c	/^int query_tex_rectangle_capability( void )$/;"	f
raw_data	stb_image_aug.c	/^      void *raw_data;$/;"	m	struct:__anon5::__anon6	file:
resample	stb_image_aug.c	/^   resample_row_func resample;$/;"	m	struct:__anon7	file:
resample_row_1	stb_image_aug.c	/^static uint8 *resample_row_1(uint8 *out, uint8 *in_near, uint8 *in_far, int w, int hs)$/;"	f	file:
resample_row_func	stb_image_aug.c	/^typedef uint8 *(*resample_row_func)(uint8 *out, uint8 *in0, uint8 *in1,$/;"	t	file:
resample_row_generic	stb_image_aug.c	/^static uint8 *resample_row_generic(uint8 *out, uint8 *in_near, uint8 *in_far, int w, int hs)$/;"	f	file:
resample_row_h_2	stb_image_aug.c	/^static uint8*  resample_row_h_2(uint8 *out, uint8 *in_near, uint8 *in_far, int w, int hs)$/;"	f	file:
resample_row_hv_2	stb_image_aug.c	/^static uint8 *resample_row_hv_2(uint8 *out, uint8 *in_near, uint8 *in_far, int w, int hs)$/;"	f	file:
resample_row_v_2	stb_image_aug.c	/^static uint8* resample_row_v_2(uint8 *out, uint8 *in_near, uint8 *in_far, int w, int hs)$/;"	f	file:
reset	stb_image_aug.c	/^static void reset(jpeg *j)$/;"	f	file:
restart_interval	stb_image_aug.c	/^   int restart_interval, todo;$/;"	m	struct:__anon5	file:
result_string_pointer	SOIL.c	/^char *result_string_pointer = "SOIL initialized";$/;"	v
rgb_888_from_565	image_DXT.c	/^void rgb_888_from_565( unsigned int c, int *r, int *g, int *b )$/;"	f
rgb_to_565	image_DXT.c	/^int rgb_to_565( int r, int g, int b )$/;"	f
s	stb_image_aug.c	/^   stbi s;$/;"	m	struct:__anon11	file:
s	stb_image_aug.c	/^   stbi s;$/;"	m	struct:__anon5	file:
sCaps	image_DXT.h	/^    sCaps;$/;"	m	struct:__anon13	typeref:struct:__anon13::__anon15
sCaps	stbi_DDS_aug_c.h	/^    }               sCaps;$/;"	m	struct:__anon21	typeref:struct:__anon21::__anon23
sPixelFormat	image_DXT.h	/^    sPixelFormat;$/;"	m	struct:__anon13	typeref:struct:__anon13::__anon14
sPixelFormat	stbi_DDS_aug_c.h	/^    }               sPixelFormat;$/;"	m	struct:__anon21	typeref:struct:__anon21::__anon22
save_image_as_DDS	image_DXT.c	/^	save_image_as_DDS$/;"	f
scale_image_RGB_to_NTSC_safe	image_helper.c	/^	scale_image_RGB_to_NTSC_safe$/;"	f
scan_n	stb_image_aug.c	/^   int scan_n, order[4];$/;"	m	struct:__anon5	file:
shiftsigned	stb_image_aug.c	/^static int shiftsigned(int v, int shift, int bits)$/;"	f	file:
size	stb_image_aug.c	/^   uint8  size[257];$/;"	m	struct:__anon4	file:
size	stb_image_aug.c	/^   uint8  size[288];$/;"	m	struct:__anon8	file:
skip	stb_image_aug.c	/^static void skip(stbi *s, int n)$/;"	f	file:
soilGlCompressedTexImage2D	SOIL.c	/^P_SOIL_GLCOMPRESSEDTEXIMAGE2DPROC soilGlCompressedTexImage2D = NULL;$/;"	v
start_file	stb_image_aug.c	/^static void start_file(stbi *s, FILE *f)$/;"	f	file:
start_mem	stb_image_aug.c	/^static void start_mem(stbi *s, uint8 const *buffer, int len)$/;"	f	file:
stbi	stb_image_aug.c	/^} stbi;$/;"	t	typeref:struct:__anon3	file:
stbi_YCbCr_installed	stb_image_aug.c	/^static stbi_YCbCr_to_RGB_run stbi_YCbCr_installed = YCbCr_to_RGB_row;$/;"	v	file:
stbi_YCbCr_to_RGB_run	stb_image_aug.h	/^typedef void (*stbi_YCbCr_to_RGB_run)(uint8 *output, uint8 const *y, uint8 const *cb, uint8 const *cr, int count, int step);$/;"	t
stbi_bmp_load	stb_image_aug.c	/^stbi_uc *stbi_bmp_load             (char const *filename,           int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_bmp_load_from_file	stb_image_aug.c	/^stbi_uc *stbi_bmp_load_from_file   (FILE *f,                  int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_bmp_load_from_memory	stb_image_aug.c	/^stbi_uc *stbi_bmp_load_from_memory (stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_bmp_test_file	stb_image_aug.c	/^int      stbi_bmp_test_file        (FILE *f)$/;"	f
stbi_bmp_test_memory	stb_image_aug.c	/^int      stbi_bmp_test_memory      (stbi_uc const *buffer, int len)$/;"	f
stbi_convert_bit_range	stbi_DDS_aug_c.h	/^int stbi_convert_bit_range( int c, int from_bits, int to_bits )$/;"	f
stbi_dds_load	stbi_DDS_aug_c.h	/^stbi_uc *stbi_dds_load             (char *filename,           int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_dds_load_from_file	stbi_DDS_aug_c.h	/^stbi_uc *stbi_dds_load_from_file   (FILE *f,                  int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_dds_load_from_memory	stbi_DDS_aug_c.h	/^stbi_uc *stbi_dds_load_from_memory (stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_dds_test_file	stbi_DDS_aug_c.h	/^int      stbi_dds_test_file        (FILE *f)$/;"	f
stbi_dds_test_memory	stbi_DDS_aug_c.h	/^int      stbi_dds_test_memory      (stbi_uc const *buffer, int len)$/;"	f
stbi_decode_DXT1_block	stbi_DDS_aug_c.h	/^void stbi_decode_DXT1_block($/;"	f
stbi_decode_DXT23_alpha_block	stbi_DDS_aug_c.h	/^void stbi_decode_DXT23_alpha_block($/;"	f
stbi_decode_DXT45_alpha_block	stbi_DDS_aug_c.h	/^void stbi_decode_DXT45_alpha_block($/;"	f
stbi_decode_DXT_color_block	stbi_DDS_aug_c.h	/^void stbi_decode_DXT_color_block($/;"	f
stbi_failure_reason	stb_image_aug.c	/^char *stbi_failure_reason(void)$/;"	f
stbi_hdr_load_from_file	stb_image_aug.c	/^float *stbi_hdr_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_hdr_load_from_memory	stb_image_aug.c	/^float *stbi_hdr_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_hdr_load_rgbe	stb_image_aug.c	/^stbi_uc *stbi_hdr_load_rgbe        (char const *filename,           int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_hdr_load_rgbe_file	stb_image_aug.c	/^stbi_uc *stbi_hdr_load_rgbe_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_hdr_load_rgbe_memory	stb_image_aug.c	/^stbi_uc *stbi_hdr_load_rgbe_memory(stbi_uc *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_hdr_test_file	stb_image_aug.c	/^int stbi_hdr_test_file(FILE *f)$/;"	f
stbi_hdr_test_memory	stb_image_aug.c	/^int stbi_hdr_test_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_hdr_to_ldr_gamma	stb_image_aug.c	/^void   stbi_hdr_to_ldr_gamma(float gamma) { h2l_gamma_i = 1\/gamma; }$/;"	f
stbi_hdr_to_ldr_scale	stb_image_aug.c	/^void   stbi_hdr_to_ldr_scale(float scale) { h2l_scale_i = 1\/scale; }$/;"	f
stbi_idct_8x8	stb_image_aug.h	/^typedef void (*stbi_idct_8x8)(uint8 *out, int out_stride, short data[64], unsigned short *dequantize);$/;"	t
stbi_idct_installed	stb_image_aug.c	/^static stbi_idct_8x8 stbi_idct_installed = idct_block;$/;"	v	file:
stbi_image_free	stb_image_aug.c	/^void stbi_image_free(void *retval_from_stbi_load)$/;"	f
stbi_install_YCbCr_to_RGB	stb_image_aug.c	/^void stbi_install_YCbCr_to_RGB(stbi_YCbCr_to_RGB_run func)$/;"	f
stbi_install_idct	stb_image_aug.c	/^extern void stbi_install_idct(stbi_idct_8x8 func)$/;"	f
stbi_is_hdr	stb_image_aug.c	/^extern int      stbi_is_hdr          (char const *filename)$/;"	f
stbi_is_hdr_from_file	stb_image_aug.c	/^extern int      stbi_is_hdr_from_file(FILE *f)$/;"	f
stbi_is_hdr_from_memory	stb_image_aug.c	/^int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_jpeg_load	stb_image_aug.c	/^unsigned char *stbi_jpeg_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_jpeg_load_from_file	stb_image_aug.c	/^unsigned char *stbi_jpeg_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_jpeg_load_from_memory	stb_image_aug.c	/^unsigned char *stbi_jpeg_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_jpeg_test_file	stb_image_aug.c	/^int stbi_jpeg_test_file(FILE *f)$/;"	f
stbi_jpeg_test_memory	stb_image_aug.c	/^int stbi_jpeg_test_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_ldr_to_hdr_gamma	stb_image_aug.c	/^void   stbi_ldr_to_hdr_gamma(float gamma) { l2h_gamma = gamma; }$/;"	f
stbi_ldr_to_hdr_scale	stb_image_aug.c	/^void   stbi_ldr_to_hdr_scale(float scale) { l2h_scale = scale; }$/;"	f
stbi_load	stb_image_aug.c	/^unsigned char *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_file	stb_image_aug.c	/^unsigned char *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_memory	stb_image_aug.c	/^unsigned char *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loader	stb_image_aug.h	/^} stbi_loader;$/;"	t	typeref:struct:__anon25
stbi_loadf	stb_image_aug.c	/^float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_file	stb_image_aug.c	/^float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_memory	stb_image_aug.c	/^float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_png_load	stb_image_aug.c	/^unsigned char *stbi_png_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_png_load_from_file	stb_image_aug.c	/^unsigned char *stbi_png_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_png_load_from_memory	stb_image_aug.c	/^unsigned char *stbi_png_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_png_test_file	stb_image_aug.c	/^int stbi_png_test_file(FILE *f)$/;"	f
stbi_png_test_memory	stb_image_aug.c	/^int stbi_png_test_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_psd_load	stb_image_aug.c	/^stbi_uc *stbi_psd_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_psd_load_from_file	stb_image_aug.c	/^stbi_uc *stbi_psd_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_psd_load_from_memory	stb_image_aug.c	/^stbi_uc *stbi_psd_load_from_memory (stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_psd_test_file	stb_image_aug.c	/^int stbi_psd_test_file(FILE *f)$/;"	f
stbi_psd_test_memory	stb_image_aug.c	/^int stbi_psd_test_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_register_loader	stb_image_aug.c	/^int stbi_register_loader(stbi_loader *loader)$/;"	f
stbi_resample	stb_image_aug.c	/^} stbi_resample;$/;"	t	typeref:struct:__anon7	file:
stbi_rgb_888_from_565	stbi_DDS_aug_c.h	/^void stbi_rgb_888_from_565( unsigned int c, int *r, int *g, int *b )$/;"	f
stbi_tga_load	stb_image_aug.c	/^stbi_uc *stbi_tga_load             (char const *filename,           int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_tga_load_from_file	stb_image_aug.c	/^stbi_uc *stbi_tga_load_from_file   (FILE *f,                  int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_tga_load_from_memory	stb_image_aug.c	/^stbi_uc *stbi_tga_load_from_memory (stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_tga_test_file	stb_image_aug.c	/^int      stbi_tga_test_file        (FILE *f)$/;"	f
stbi_tga_test_memory	stb_image_aug.c	/^int      stbi_tga_test_memory      (stbi_uc const *buffer, int len)$/;"	f
stbi_uc	stb_image_aug.h	/^typedef unsigned char stbi_uc;$/;"	t
stbi_write_bmp	stb_image_aug.c	/^int stbi_write_bmp(char const *filename, int x, int y, int comp, void *data)$/;"	f
stbi_write_tga	stb_image_aug.c	/^int stbi_write_tga(char const *filename, int x, int y, int comp, void *data)$/;"	f
stbi_zlib_decode_buffer	stb_image_aug.c	/^int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_malloc	stb_image_aug.c	/^char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize	stb_image_aug.c	/^char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, int *outlen)$/;"	f
stbi_zlib_decode_noheader_buffer	stb_image_aug.c	/^int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_noheader_malloc	stb_image_aug.c	/^char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f
test_file	stb_image_aug.h	/^   int       (*test_file)(FILE *f);$/;"	m	struct:__anon25
test_memory	stb_image_aug.h	/^   int       (*test_memory)(stbi_uc const *buffer, int len);$/;"	m	struct:__anon25
tga_load	stb_image_aug.c	/^static stbi_uc *tga_load(stbi *s, int *x, int *y, int *comp, int req_comp)$/;"	f	file:
tga_test	stb_image_aug.c	/^static int tga_test(stbi *s)$/;"	f	file:
todo	stb_image_aug.c	/^   int restart_interval, todo;$/;"	m	struct:__anon5	file:
tq	stb_image_aug.c	/^      int tq;$/;"	m	struct:__anon5::__anon6	file:
type	stb_image_aug.c	/^   uint32 type;$/;"	m	struct:__anon10	file:
uint	stb_image_aug.c	/^typedef unsigned int   uint;$/;"	t	file:
uint16	stb_image_aug.c	/^typedef unsigned short uint16;$/;"	t	file:
uint32	stb_image_aug.c	/^typedef unsigned int   uint32;$/;"	t	file:
uint8	stb_image_aug.c	/^typedef unsigned char uint8;$/;"	t	file:
up_scale_image	image_helper.c	/^	up_scale_image$/;"	f
v	stb_image_aug.c	/^      int h,v;$/;"	m	struct:__anon5::__anon6	file:
validate_uint32	stb_image_aug.c	/^typedef unsigned char validate_uint32[sizeof(uint32)==4];$/;"	t	file:
value	stb_image_aug.c	/^   uint16 value[288];$/;"	m	struct:__anon8	file:
values	stb_image_aug.c	/^   uint8  values[256];$/;"	m	struct:__anon4	file:
vs	stb_image_aug.c	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon7	file:
w2	stb_image_aug.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon5::__anon6	file:
w_lores	stb_image_aug.c	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon7	file:
write8	stb_image_aug.c	/^static void write8(FILE *f, int x) { uint8 z = (uint8) x; fwrite(&z,1,1,f); }$/;"	f	file:
write_pixels	stb_image_aug.c	/^static void write_pixels(FILE *f, int rgb_dir, int vdir, int x, int y, int comp, void *data, int write_alpha, int scanline_pad)$/;"	f	file:
writef	stb_image_aug.c	/^static void writef(FILE *f, char *fmt, ...)$/;"	f	file:
writefv	stb_image_aug.c	/^static void writefv(FILE *f, char *fmt, va_list v)$/;"	f	file:
x	stb_image_aug.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon5::__anon6	file:
y	stb_image_aug.c	/^      int x,y,w2,h2;$/;"	m	struct:__anon5::__anon6	file:
ypos	stb_image_aug.c	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon7	file:
ystep	stb_image_aug.c	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon7	file:
z_distance	stb_image_aug.c	/^   zhuffman z_length, z_distance;$/;"	m	struct:__anon9	file:
z_expandable	stb_image_aug.c	/^   int   z_expandable;$/;"	m	struct:__anon9	file:
z_length	stb_image_aug.c	/^   zhuffman z_length, z_distance;$/;"	m	struct:__anon9	file:
zbuf	stb_image_aug.c	/^} zbuf;$/;"	t	typeref:struct:__anon9	file:
zbuffer	stb_image_aug.c	/^   uint8 *zbuffer, *zbuffer_end;$/;"	m	struct:__anon9	file:
zbuffer_end	stb_image_aug.c	/^   uint8 *zbuffer, *zbuffer_end;$/;"	m	struct:__anon9	file:
zbuild_huffman	stb_image_aug.c	/^static int zbuild_huffman(zhuffman *z, uint8 *sizelist, int num)$/;"	f	file:
zget8	stb_image_aug.c	/^__forceinline static int zget8(zbuf *z)$/;"	f	file:
zhuffman	stb_image_aug.c	/^} zhuffman;$/;"	t	typeref:struct:__anon8	file:
zhuffman_decode	stb_image_aug.c	/^__forceinline static int zhuffman_decode(zbuf *a, zhuffman *z)$/;"	f	file:
zout	stb_image_aug.c	/^   char *zout;$/;"	m	struct:__anon9	file:
zout_end	stb_image_aug.c	/^   char *zout_end;$/;"	m	struct:__anon9	file:
zout_start	stb_image_aug.c	/^   char *zout_start;$/;"	m	struct:__anon9	file:
zreceive	stb_image_aug.c	/^__forceinline static unsigned int zreceive(zbuf *z, int n)$/;"	f	file:
